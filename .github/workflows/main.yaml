name: Main

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:

jobs:
  conda-size:
    name: Conda size
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.conda-size.outputs.json }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/nix-setup
      - id: conda-size
        run: |
          nix run --print-build-logs .#pytorch-conda-size \
            | jq -c '"json=\(.)"' \
            | tee -a "$GITHUB_OUTPUT"

  conda-size-markdown:
    name: Conda size markdown
    runs-on: ubuntu-latest
    needs: conda-size
    env:
      ENV_SIZE: ${{ fromJSON(needs.conda-size.outputs.json).env_size }}
      ENV_HUMAN_READABLE: ${{ fromJSON(needs.conda-size.outputs.json).env_human_readable }}
      PKGS_SIZE: ${{ fromJSON(needs.conda-size.outputs.json).pkgs_size }}
      PKGS_HUMAN_READABLE: ${{ fromJSON(needs.conda-size.outputs.json).pkgs_human_readable }}
      PKGS_COMPRESSED_SIZE: ${{ fromJSON(needs.conda-size.outputs.json).pkgs_compressed_size }}
      PKGS_COMPRESSED_HUMAN_READABLE: ${{ fromJSON(needs.conda-size.outputs.json).pkgs_compressed_human_readable }}
    steps:
      - run: |
          echo "## Conda size" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "Components:" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "  - Environment: the environment directory size" >> "$GITHUB_STEP_SUMMARY"
          echo "  - Packages: the packages directory size" >> "$GITHUB_STEP_SUMMARY"
          echo "  - Packages (compressed): the size of compressed files in the packages directory (representative of downloaded artifacts)" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "| Component | Size | Bytes |" >> "$GITHUB_STEP_SUMMARY"
          echo "| --- | --- | --- |" >> "$GITHUB_STEP_SUMMARY"
          echo "| Environment | $ENV_HUMAN_READABLE | $ENV_SIZE |" >> "$GITHUB_STEP_SUMMARY"
          echo "| Packages | $PKGS_HUMAN_READABLE | $PKGS_SIZE |" >> "$GITHUB_STEP_SUMMARY"
          echo "| Packages (compressed) | $PKGS_COMPRESSED_HUMAN_READABLE | $PKGS_COMPRESSED_SIZE |" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"


  # docker-image-size:
  #   name: Docker image size
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/nix-setup
  #     - run: |
  #         JSON="$(nix run --print-build-logs .#pytorch-docker-image-size)"

  #         SIZE="$(jq -r .size <<< "$JSON")"
  #         HUMAN_READABLE="$(jq -r .human_readable <<< "$JSON")"

  #         echo "## Docker image size" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
  #         echo "The size of the compressed Docker image" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| Size | Bytes |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| --- | --- |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| $HUMAN_READABLE | $SIZE |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"

  # nix-store-size:
  #   name: Nix store size
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/nix-setup
  #     - run: |
  #         JSON="$(nix run --print-build-logs .#pytorch-nix-store-size)"

  #         SIZE="$(jq -r .size <<< "$JSON")"
  #         HUMAN_READABLE="$(jq -r .human_readable <<< "$JSON")"

  #         echo "## Nix store size" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
  #         echo "The size of the closure in the Nix store" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| Size | Bytes |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| --- | --- |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| $HUMAN_READABLE | $SIZE |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"

  # nix-binary-cache-size-zstd:
  #   name: Nix binary cache size (zstd)
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       compression-level: [1, 2, 3, 4, 5]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/nix-setup
  #     - run: |
  #         JSON="$(nix run --print-build-logs .#pytorch-nix-binary-cache-size-zstd-${{ matrix.compression-level }})"

  #         SIZE="$(jq -r .size <<< "$JSON")"
  #         HUMAN_READABLE="$(jq -r .human_readable <<< "$JSON")"

  #         echo "## Nix binary cache size (zstd;${{ matrix.compression-level }}) " >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
  #         echo "The size of the closure in the Nix binary cache using zstd at compression level ${{ matrix.compression-level }}" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| Size | Bytes |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| --- | --- |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "| $HUMAN_READABLE | $SIZE |" >> "$GITHUB_STEP_SUMMARY"
  #         echo "" >> "$GITHUB_STEP_SUMMARY"
